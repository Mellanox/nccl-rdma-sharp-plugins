#!/usr/bin/env groovy

pipeline {
    agent {label "ml-test-node-gpu"}

    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 10, unit: 'MINUTES')
        disableConcurrentBuilds()
    }

    environment {
        SRC_ROOT = "${env.WORKSPACE}"
        ARTEFACT_DIR = "${env.WORKSPACE}/artefacts"
        NFS_WORKSPACE = "/.autodirect/mtrswgwork/_ml_devops_team/workspace/ml-nccl-rdma-sharp-plugins-pr/${env.BUILD_NUMBER}"
        CUDA_HOME = "/hpc/local/oss/cuda10.0"
        // NCCL_DIR = "/.autodirect/mtrswgwork/artemry/ci_tools_do_not_remove/nccl-sharp-stable-2019-08-16/build"
        NCCL_SRC_DIR = "${SRC_ROOT}/nccl"
        NCCL_DIR = "${NFS_WORKSPACE}/nccl"
        NCCL_TESTS_DIR = "${NFS_WORKSPACE}/nccl-tests"
        // Variables for publish_artefacts_to_gist.py
        UPSTREAM_JOB_NAME = "${env.JOB_NAME}"
        UPSTREAM_BUILD_NUMBER = "${env.BUILD_NUMBER}"
        UPSTREAM_ghprbGhRepository = "${env.ghprbGhRepository}"
        UPSTREAM_ghprbPullId = "${env.ghprbPullId}"
    }

    stages {
        stage('Preparations') {
            steps {
                echo 'Preparations...'
                sh 'mkdir -p ${ARTEFACT_DIR}'
                sh 'mkdir -p ${NFS_WORKSPACE}'
            }
        }
        stage('Checkout NCCL') {
            steps {
                sh 'mkdir -p ${NCCL_SRC_DIR}'
                dir("${NCCL_SRC_DIR}") {
                    git branch: 'master',
                    url: 'git@gitlab.com:Mellanox/nccl-sharp.git'
                }
            }
        }
        stage('Build NCCL') {
            steps {
                echo 'Building NCCL...'
                sh 'set -o pipefail; ${SRC_ROOT}/.ci/build_nccl.sh 2>&1 | tee ${ARTEFACT_DIR}/build_nccl.log'
                sh 'cp -R ${NCCL_SRC_DIR}/build/* ${NCCL_DIR}'
                sh 'find ${NCCL_DIR} -type f'
            }
        }
        stage('Build nccl-rdma-sharp-plugins') {
            steps {
                echo 'Building nccl-rdma-sharp-plugins...'
                sh 'set -o pipefail; ${SRC_ROOT}/.ci/build.sh 2>&1 | tee ${ARTEFACT_DIR}/build.log'
            }
        }
        stage('Checkout NCCL tests') {
            steps {
                sh 'mkdir -p ${NCCL_TESTS_DIR}'
                dir("${NCCL_TESTS_DIR}") {
                    git branch: 'master',
                    url: 'https://github.com/NVIDIA/nccl-tests.git'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing nccl-rdma-sharp-plugins...'
                sh 'set -o pipefail; ${SRC_ROOT}/.ci/run_nccl_test.sh 2>&1 | tee ${ARTEFACT_DIR}/run_nccl_test.log'
            }
        }
    }
    post {
        always {
            echo 'Post-actions...'
            echo 'Publish artefacts...'
            sh 'rm -rf ${SRC_ROOT}/gist_tmp'
            sh 'ls -al ${ARTEFACT_DIR}'
            sh 'python /.autodirect/mtrswgwork/artemry/ci_tools_do_not_remove/publish_artefacts_to_gist.py'
        }
    }
}
