#!/usr/bin/env groovy

// Verified with Jenkins v2.164.3

// TODO:
// 1. Calculate taskset/affinity for the scripts based on total number of jenkins executors
// 2. NCCL/CUDA/SHARP dependencies should be parameterized
// 3. HPC-X OS/MOFED support matrix should be covered (e.g. docker-based)
// 4. Add signal handlers in the scripts (e.g. to correctly handle Jenkins abort by timeout situations)

pipeline {
    agent {label "ml-test-node-gpu"}

    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 15, unit: 'MINUTES')
        disableConcurrentBuilds()
    }

    environment {
        ARTEFACT_DIR                = "${WORKSPACE}/artefacts"
        // Note: ${NFS_WORKSPACE_ROOT} is cleaned up daily (5 day old files are removed)
        NFS_WORKSPACE               = "${NFS_WORKSPACE_ROOT}/ml-nccl-rdma-sharp-plugins-pr/${BUILD_NUMBER}"
        NCCL_SRC_DIR                = "${WORKSPACE}/nccl"
        NCCL_GIT_URL                = "https://github.com/NVIDIA/nccl.git"
        NCCL_GIT_BRANCH             = "collnet"
        NCCL_DIR                    = "${NFS_WORKSPACE}/nccl"
        NCCL_RDMA_SHARP_PLUGINS_DIR = "${NFS_WORKSPACE}/nccl-rdma-sharp-plugins"
        NCCL_TESTS_DIR              = "${NFS_WORKSPACE}/nccl-tests"
    }

    stages {
        stage('Preparations') {
            steps {
                echo 'Preparations...'
                sh 'mkdir -p ${ARTEFACT_DIR}'
                sh 'mkdir -p ${NFS_WORKSPACE}'
            }
        }
        stage('Checkout NCCL') {
            steps {
                dir("${NCCL_SRC_DIR}") {
                    git branch: "${NCCL_GIT_BRANCH}",
                    url: "${NCCL_GIT_URL}"
                }
            }
        }
        stage('Build NCCL') {
            steps {
                echo 'Building NCCL...'
                sh 'set -o pipefail; ${WORKSPACE}/.ci/build_nccl.sh 2>&1 | tee ${ARTEFACT_DIR}/build_nccl.log'
                sh 'mkdir -p ${NCCL_DIR}'
                sh 'cp -R ${NCCL_SRC_DIR}/build/* ${NCCL_DIR}'
            }
        }
        stage('Build nccl-rdma-sharp-plugins') {
            steps {
                echo 'Building nccl-rdma-sharp-plugins...'
                sh 'set -o pipefail; ${WORKSPACE}/.ci/build_nccl_rdma_sharp_plugins.sh 2>&1 | tee ${ARTEFACT_DIR}/build_nccl_rdma_sharp_plugins.log'
            }
        }
        stage('Configure SHARP: startup') {
            steps {
                echo 'Configure SHARP: startup...'
                sh 'set -o pipefail; ${WORKSPACE}/.ci/configure_sharp.sh 2>&1 | tee ${ARTEFACT_DIR}/configure_sharp_startup.log'
            }
        }
        stage('Checkout NCCL tests') {
            steps {
                dir("${NCCL_TESTS_DIR}") {
                    git branch: 'master',
                    url: 'https://github.com/NVIDIA/nccl-tests.git'
                }
            }
        }
        stage('Test nccl-rdma-sharp-plugins') {
            steps {
                echo 'Testing nccl-rdma-sharp-plugins...'
                sh 'set -o pipefail; ${WORKSPACE}/.ci/run_nccl_test.sh 2>&1 | tee ${ARTEFACT_DIR}/run_nccl_test.log'
            }
        }
        stage('Configure SHARP: stop') {
            steps {
                echo 'Configure SHARP: stop...'
                sh 'set -o pipefail; ${WORKSPACE}/.ci/configure_sharp.sh stop 2>&1 | tee ${ARTEFACT_DIR}/configure_sharp_stop.log'
            }
        }
    }
    post {
        always {
            echo 'Post-actions...'
            sh '${WORKSPACE}/.ci/publish_artefacts.sh'
        }
    }
}
