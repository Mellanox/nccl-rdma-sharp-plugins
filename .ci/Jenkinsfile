#!/usr/bin/env groovy

pipeline {
    agent {label "clx-host-21514||clx-host-21518"}

    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 10, unit: 'MINUTES')
    }

    environment {
        SRC_ROOT = "${env.WORKSPACE}"
        ARTEFACT_DIR = "${env.WORKSPACE}/artefacts"
        NFS_WORKSPACE = "/.autodirect/mtrswgwork/_ml_devops_team/workspace/ml-nccl-rdma-sharp-plugins-pr/${env.BUILD_NUMBER}"
        // Variables for publish_artefacts_to_gist.py
        UPSTREAM_JOB_NAME = "${env.JOB_NAME}"
        UPSTREAM_BUILD_NUMBER = "${env.BUILD_NUMBER}"
        UPSTREAM_ghprbGhRepository = "${env.ghprbGhRepository}"
        UPSTREAM_ghprbPullId = "${env.ghprbPullId}"
    }
  
    stages {
        stage('Preparations') {
            steps {
                echo 'Preparations...'
                echo "DEBUG: SRC_ROOT = ${SRC_ROOT}"
                echo "DEBUG: ARTEFACT_DIR = ${ARTEFACT_DIR}"
                echo "DEBUG: NFS_WORKSPACE = ${NFS_WORKSPACE}"
                echo "DEBUG: UPSTREAM_JOB_NAME = ${UPSTREAM_JOB_NAME}"
                echo "DEBUG: UPSTREAM_ghprbGhRepository = ${UPSTREAM_ghprbGhRepository}"
                echo "DEBUG: UPSTREAM_ghprbPullId = ${UPSTREAM_ghprbPullId}"
                sh 'mkdir -p ${ARTEFACT_DIR}'
                sh 'mkdir -p ${NFS_WORKSPACE}'
            }
        }
        stage('Checkout NCCL tests') {
            stage('Checkout NCCL tests') {
                steps {
                    dir("${NFS_WORKSPACE}") {
                        git branch: 'master',
                        credentialsId: 'mellanox-github',
                        url: 'https://github.com/NVIDIA/nccl-tests.git'
                    }
                }
            }
            //steps {
            //    checkout([
            //        $class: 'GitSCM',
            //        branches: [[name: 'master']],
            //        doGenerateSubmoduleConfigurations: false,
            //        extensions: [[
            //            $class: 'RelativeTargetDirectory',
            //            relativeTargetDir: 'nccl-tests'
            //        ]],
            //        submoduleCfg: [],
            //        userRemoteConfigs: [[
            //            url: 'https://github.com/NVIDIA/nccl-tests.git'
            //        ]]
            //    ])
            //    sh 'pwd'
            //    sh 'ls -al'
            //}
        }
        stage('Build nccl-rdma-sharp-plugins') {
            steps {
                echo 'Building nccl-rdma-sharp-plugins...'
                sh '${SRC_ROOT}/.ci/build.sh 2>&1 | tee ${ARTEFACT_DIR}/build.log'
            }
        }
        stage('Test nccl-rdma-sharp-plugins') {
            steps {
                echo 'Testing nccl-rdma-sharp-plugins... (not yet implemented)'
            }
        }
    }
    post {
        always {
            echo 'Post-actions...'
            echo "DEBUG: SRC_ROOT = ${SRC_ROOT}"
            echo "DEBUG: ARTEFACT_DIR = ${ARTEFACT_DIR}"
            echo "DEBUG: UPSTREAM_JOB_NAME = ${UPSTREAM_JOB_NAME}"
            echo "DEBUG: UPSTREAM_ghprbGhRepository = ${UPSTREAM_ghprbGhRepository}"
            echo "DEBUG: UPSTREAM_ghprbPullId = ${UPSTREAM_ghprbPullId}"
            echo 'Publish artefacts...'
            sh 'rm -rf ${SRC_ROOT}/gist_tmp'
            sh 'ls -al ${ARTEFACT_DIR}'
            sh 'python /.autodirect/mtrswgwork/artemry/ci_tools_do_not_remove/publish_artefacts_to_gist.py'
        }
    }
}
