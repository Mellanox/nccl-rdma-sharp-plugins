#!/usr/bin/env groovy

pipeline {
    agent {label "clx-host-21514||clx-host-21518"}

    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 10, unit: 'MINUTES')
    }

    environment {
        WORK_DIR = "${env.WORKSPACE}"
        ARTEFACT_DIR = "${env.WORKSPACE}/artefacts"
        UPSTREAM_JOB_NAME = ${env.UPSTREAM_JOB_NAME}"
        UPSTREAM_BUILD_NUMBER = ${env.UPSTREAM_BUILD_NUMBER}"
        UPSTREAM_ghprbGhRepository = ${env.UPSTREAM_ghprbGhRepository}"
        UPSTREAM_ghprbPullId = ${env.UPSTREAM_ghprbPullId}"
    }
  
    stages {
        stage('Preparations') {
            steps {
                echo 'Preparations...'
                echo "DEBUG: WORK_DIR = ${WORK_DIR}"
                echo "DEBUG: ARTEFACT_DIR = ${ARTEFACT_DIR}"
                echo "DEBUG: UPSTREAM_JOB_NAME = ${UPSTREAM_JOB_NAME}"
                echo "DEBUG: UPSTREAM_ghprbGhRepository = ${UPSTREAM_ghprbGhRepository}"
                echo "DEBUG: UPSTREAM_ghprbPullId = ${UPSTREAM_ghprbPullId}"
                sh 'mkdir -p ${ARTEFACT_DIR}'
            }
        }
        stage('Checkout NCCL tests') {
            steps {
                //checkout([
                //    $class: 'GitSCM',
                //    branches: [[name: 'master']],
                //    doGenerateSubmoduleConfigurations: false,
                //    extensions: [[
                //        $class: 'RelativeTargetDirectory',
                //        relativeTargetDir: 'nccl-sharp'
                //    ]],
                //    submoduleCfg: [],
                //    userRemoteConfigs: [[
                //        url: 'git@gitlab.com:Mellanox/nccl-sharp.git'
                //    ]]
                //])
                //checkout([
                //    $class: 'GitSCM',
                //    branches: [[name: 'master']],
                //    doGenerateSubmoduleConfigurations: false,
                //    extensions: [[
                //        $class: 'RelativeTargetDirectory',
                //        relativeTargetDir: 'nccl-sharp/nccl-tests'
                //    ]],
                //    submoduleCfg: [],
                //    userRemoteConfigs: [[
                //        url: 'https://github.com/NVIDIA/nccl-tests.git'
                //    ]]
                //])
                sh 'pwd'
                sh 'ls -al'
            }
        }
        stage('Build nccl-rdma-sharp-plugins') {
            steps {
                echo 'Building nccl-rdma-sharp-plugins...'
                sh '${WORK_DIR}/.ci/build.sh 2>&1 | tee ${ARTEFACT_DIR}/build.log'
            }
        }
        stage('Test nccl-rdma-sharp-plugins') {
            steps {
                echo 'Testing nccl-rdma-sharp-plugins... (not yet implemented)'
            }
        }
    }
    post {
        always {
            echo 'Post-actions...'
            echo 'Publish artefacts...'
            sh 'wget https://gitlab.com/Mellanox/ml-devops-infra/blob/master/jenkins/publish_artefacts_to_gist.py'
            sh 'rm -rf ${WORK_DIR}/gist_tmp'
            sh 'ls -al ${ARTEFACT_DIR}'
            sh 'python ${WORK_DIR}/ml-nccl-sharp-ci/ml-devops-infra/jenkins/publish_artefacts_to_gist.py'
        }
    }
}
